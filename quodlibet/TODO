Translations
------------
Also, comments for translators where appropriate.

Use less Glade
--------------
The parts of the code that are messiest (like PropertiesWindow) are
that way at least partially from Glade. There's no good reason to be
using it now that the dialogs are reasonably mature, it's slow, and
it's big. These windows should be in Python, and new windows should
probably be written in python from the start.

Port iFP PMP driver to PyIFP
----------------------------
James Evans recently posted Python bindings for libifp to the
ifp-driver-common list. They'd be much much nicer to use, especially
if progress callbacks are working.

Fix fs encoding bug
-------------------
Requires cleanups before attempting, so we have a good division between
displayed strings and byte strings (this is worst in Properties). See
util.fscoding for the way to get the encoding.

Clean up properties
-------------------
Don't enable widgets unless we're reasonably sure they can be used. This
means detecting unwriteable files both at the can_change level and at
the OS permissions level.

Remember UI element states
--------------------------
Show/hide state of the song list, the browser currently in use, and
whatever state that browser might need to save (current playlist,
current query). Again Glade will probably get in the way, and it will
be a fight with GTK's sizing.

GStreamer backend
-----------------
Experiment with a GStreamer backend. This is not very interesting from
a format perspective (yet), but it might let us avoid threading problems.

Support for more audio formats
------------------------------
Monkey's Audio is the most requested (i.e., everything else requested
has been implemented), but MA is not a freely licensed codec. Maybe
we should support WAV? Other possibilities are forms of M4A/AAC,
RM, WMA, if free libraries exist to read from them.

Covers from Muine, RB
---------------------
Muine uses a pixmap serialization function to save to a BDB database.
This function is not available directly from PyGTK. If it was, this
would be easy.

RB's album cover patch is immature, but so far just stores JPGs
in ~/.gnome2/rhythmbox.

Browser modes
-------------
In particular, an iTunes/RB-like browser, and a Muine-style album browser.

Album cover download
--------------------
Amazon has a ToS I can't agree to, but a Google image search for the
album name (or especially label ID) seems to be effective.

More unit tests
---------------
Really, they're crap now.

PMP Interfacing
---------------
The current PMP system is designed for small devices that manage playlists.
Large (multi-GB) ones have different needs, and instead should use (partial)
mirror of the library.

IÃ±igo suggested using a "shared" flagin the song metadata, which would
(on the user's request) copy the filesystem structure to the device;
the device would be tracked with HAL/DBUS.

Another way would be to store an "alternate filenames" list with each
song. This would let you use multiple devices/filesystems at once, but
I don't think that's a common enough use case to justify the complexity.

HAL/DBUS
--------
We could use the article hal/dbus part to know when a device is
plugged in, and trigger a library refresh if it's in our scan directories
or masked list. This is a good idea even without the above stuff.

New keys
--------
File size? (Is this useful?)

Others
------
RPM spec/package, Gentoo ebuild, whatever.

Not Interested
--------------
Streaming. It doesn't fit well into our library model, and it might never.

Transcoding, ripping, burning, better PMP management. Get a separate
program, and we'll integrate with it.
