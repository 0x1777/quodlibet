Translations
------------
Also, comments for translators where appropriate.

Use less Glade
--------------
MainWindow and PrefsWindow should be in Python, and new windows should
probably be written in Python from the start.

Port iFP PMP driver to PyIFP
----------------------------
James Evans recently posted Python bindings for libifp to the
ifp-driver-common list. They'd be much much nicer to use, especially
if progress callbacks are working.

Remember browser information
----------------------------
Browsers need a way to properly save and reinitialize themselves.

GStreamer backend
-----------------
Experiment with a GStreamer backend. This is not very interesting from
a format perspective (yet), but it might let us avoid threading problems.

Support for more audio formats
------------------------------
Monkey's Audio is the most requested (i.e., everything else requested
has been implemented), but MA is not a freely licensed codec. Maybe
we should support WAV? Other possibilities are forms of M4A/AAC,
RM, WMA, if free libraries exist to read from them.

Covers from Muine, RB
---------------------
Muine uses a pixmap serialization function to save to a BDB database.
This function is not available directly from PyGTK. If it was, this
would be easy.

RB's album cover patch is immature, but so far just stores JPGs
in ~/.gnome2/rhythmbox.

Browser modes
-------------
In particular, an iTunes/RB-like browser, and a Muine-style album browser.

Album cover download
--------------------
Amazon has a ToS I can't agree to, but a Google image search for the
album name (or especially label ID) seems to be effective.

More unit tests
---------------
Really, they're crap now.

PMP Interfacing
---------------
The current PMP system is designed for small devices that manage playlists.
Large (multi-GB) ones have different needs, and instead should use (partial)
mirror of the library.

IÃ±igo suggested using a "shared" flagin the song metadata, which would
(on the user's request) copy the filesystem structure to the device;
the device would be tracked with HAL/DBUS.

Another way would be to store an "alternate filenames" list with each
song. This would let you use multiple devices/filesystems at once, but
I don't think that's a common enough use case to justify the complexity.

HAL/DBUS
--------
We could use the article hal/dbus part to know when a device is
plugged in, and trigger a library refresh if it's in our scan directories
or masked list. This is a good idea even without the above stuff.

New keys
--------
File size? (Is this useful?)

IRC Dumps
---------
(mu) at some point the "examples" should be made configurable on users systems
+.  ideally saveable from the program itself.
(piman_) Yeah.
(piman_) Around the same time I make it save the whole past query list, since
+the backend requirements are the same.

(piman_) We need some sort of QL manual...
(mu) heh.  make wm write it?
(piman_) The number of tiny languages we have is too long for man page :/

Others
------
RPM spec/package, Gentoo ebuild, whatever.
